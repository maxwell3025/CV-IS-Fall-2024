per_token_train_loss = [
    2.285742466337979,
    1.9688838188137328,
    1.835182941385678,
    1.7203470139897294,
    1.616353269400341,
    1.5263826289613331,
    1.4409356694668531,
    1.3658947223531348,
    1.3043953347951174,
    1.2484541422953563,
    1.1951625642499752,
    1.1384929475773657,
    1.1097093277078653,
    1.0738041551916726,
    1.0361777618527412,
    1.0080025146848388,
    0.998734923212656,
    0.9761340584206794,
    0.9554712271450886,
    0.9358919173079941,
    0.9248653704832707,
    0.9219959315045604,
    0.8953111564208355,
    0.8841065167050276,
    0.8743368751103324,
    0.87214004321556,
    0.8554991178347596,
    0.8382828705944121,
    0.8324903598986566,
    0.8300052062342209,
    0.8141060965135694,
    0.818038301010217,
    0.8133175899939877,
    0.7948245601728559,
    0.7904336181735354,
    0.7838936831935176,
    0.7723730922277484,
    0.7954601881626461,
    0.7641272083190935,
    0.7532971426844597,
    0.7471446170737701,
    0.7443737384331014,
    0.7356079810831163,
    0.7293222915780332,
    0.7286683043598065,
    0.7236650699882635,
    0.7228210662890758,
    0.7096057569475046,
    0.7016644437930414,
    0.7056219500622579,
]

in_context_accuracy = [
    0.3478840386537821,
    0.3915361546151283,
    0.4105298233922026,
    0.4286904365211596,
    0.43502165944685106,
    0.4540153282239254,
    0.4485171609463512,
    0.45318227257580806,
    0.4566811062979007,
    0.44951682772409196,
    0.45234921692769076,
    0.44918360546484504,
    0.45701432855714763,
    0.4561812729090303,
    0.45051649450183273,
    0.4543485504831723,
    0.4605131622792403,
    0.45201599466844383,
    0.45851382872375873,
    0.46017994001999335,
    0.45418193935354884,
    0.4555148283905365,
    0.45201599466844383,
    0.4490169943352216,
    0.44768410529823394,
    0.4488503832055981,
    0.44668443852049317,
    0.44951682772409196,
    0.4445184938353882,
    0.44518493835388206,
    0.4501832722425858,
    0.44868377207597465,
    0.4521826057980673,
    0.4521826057980673,
    0.4586804398533822,
    0.4576807730756415,
    0.4465178273908697,
    0.43868710429856717,
    0.44385204931689437,
    0.4431856047984005,
    0.44401866044651783,
    0.44301899366877706,
    0.437187604131956,
    0.43652115961346216,
    0.43418860379873375,
    0.4356881039653449,
    0.4363545484838387,
    0.4418527157614129,
    0.4366877707430856,
    0.4298567144285238,
]

shuffled_accuracy = [
    0.3404361578158815,
    0.38873192620907426,
    0.40885072655217963,
    0.4386168100595632,
    0.4390896921017403,
    0.44176232275489535,
    0.4521985343104597,
    0.44275447100117,
    0.46220016542597187,
    0.45040840140023336,
    0.4387161150839847,
    0.4439291038595329,
    0.4510261972301018,
    0.44973457199734573,
    0.45327336331834084,
    0.446843853820598,
    0.4641503214109115,
    0.4547110448749793,
    0.45183447813704136,
    0.456028249537582,
    0.45287089279787585,
    0.4497061293031066,
    0.4520365752285952,
    0.4369266055045872,
    0.46531020680453633,
    0.4421246033071655,
    0.43991989319092123,
    0.445531197301855,
    0.4493691899070385,
    0.43991887780970085,
    0.4321274477265184,
    0.4511417058428476,
    0.44638655462184873,
    0.4410835964766495,
    0.4633538308126974,
    0.4534569983136594,
    0.4457791124457791,
    0.43416721527320606,
    0.435,
    0.45056236360584184,
    0.43956043956043955,
    0.46581691772885286,
    0.4299581589958159,
    0.43112582781456954,
    0.4410678307588986,
    0.4315510677040225,
    0.45381062355658197,
    0.4375934851254778,
    0.43657331136738053,
    0.4439236692333445,
]

import matplotlib.pyplot as plt

fig, ax = plt.subplots()

# Plot the data
ax.plot([epoch for epoch in range(1, 51)], in_context_accuracy, label="In-Context Accuracy")
ax.plot([epoch for epoch in range(1, 51)], shuffled_accuracy, label="Shuffled Accuracy")
ax.legend(loc='upper left')

# Customize the plot
ax.set_title("Sequence Stack Accuracy on Synthetic Words")
ax.set_xticks([epoch for epoch in range(5, 51, 5)])
ax.set_xlabel("Epoch")
ax.set_ylabel("Accuracy")

# Show the plot
plt.show()